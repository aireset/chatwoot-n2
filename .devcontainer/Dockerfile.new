
ARG VARIANT="ubuntu-22.04"

FROM mcr.microsoft.com/vscode/devcontainers/base:0-${VARIANT}

# Definir variáveis de ambiente
ARG NODE_VERSION="20.9.0"
ARG RUBY_VERSION="3.3.3"
ARG USER_UID="1000"
ARG USER_GID="1000"

# Update args in docker-compose.yaml to set the UID/GID of the "vscode" user.
RUN if [ "$USER_GID" != "1000" ] || [ "$USER_UID" != "1000" ]; then \
        groupmod --gid $USER_GID vscode \
        && usermod --uid $USER_UID --gid $USER_GID vscode \
        && chmod -R $USER_UID:$USER_GID /home/vscode; \
    fi


# Instalar dependências do sistema
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
  && apt-get -y install --no-install-recommends \
    build-essential \
    libssl-dev \
    zlib1g-dev \
    gnupg2 \
    tar \
    tzdata \
    postgresql-client \
    libpq-dev \
    yarn \
    git \
    imagemagick \
    tmux \
    zsh \
    git-flow \
    npm \
    redis-tools \
    curl \
    libyaml-dev

# Instalar o Node.js e Yarn
RUN curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g yarn

# Instalar rbenv e Ruby
RUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv \
    && echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc \
    && echo 'eval "$(rbenv init -)"' >> ~/.bashrc \
    && git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build \
    && ~/.rbenv/plugins/ruby-build/install.sh

# Instalar a versão do Ruby definida
RUN ~/.rbenv/bin/rbenv install ${RUBY_VERSION} \
    && ~/.rbenv/bin/rbenv global ${RUBY_VERSION} \
    && ~/.rbenv/bin/rbenv rehash

# Instalar o Bundler
RUN gem install bundler

# Install gh
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
   && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
   && sudo apt update \
   && sudo apt install gh


# Do the set up required for chatwoot app
WORKDIR /workspace
COPY . /workspace

# Instalar dependências do Vite e Vue.js
COPY package.json yarn.lock ./
RUN yarn install

# Instalar as dependências Ruby (Rails, por exemplo)
COPY Gemfile Gemfile.lock ./
RUN bundle install

# set up ruby
COPY Gemfile Gemfile.lock ./
RUN gem install bundler && bundle install

# set up node js
RUN npm install n -g && \
    n $NODE_VERSION
RUN npm install --global yarn

# Instalar Overmind para gerenciamento de processos
RUN curl -L https://github.com/DarthSim/overmind/releases/download/v2.2.0/overmind-v2.2.0-linux-amd64.gz | gunzip - > /usr/local/bin/overmind \
    && chmod +x /usr/local/bin/overmind
